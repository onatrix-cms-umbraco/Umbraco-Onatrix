@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper
@using Umbraco.Cms.Core
@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Cms.Core.Routing
@using Umbraco.Extensions
@inject IPublishedValueFallback PublishedValueFallback
@inject IPublishedUrlProvider PublishedUrlProvider
@{
    var rootContents = UmbracoHelper.ContentAtRoot();
    var settings = rootContents?.FirstOrDefault(x => x.ContentType.Alias == "settingsPage") ?? null;
    var siteName = settings?.Value<string>("siteName") ?? "";
    var siteLogotype = settings?.Value<IPublishedContent>("siteLogotype")?.Url() ?? "";

    var selection = Model.Root().Children.Where(x => x.IsVisible(PublishedValueFallback)).ToArray();
}


      <header id="header" class="bg-light shadow">
        <div class="container nav-bar">
          <a href="/"><img src="@siteLogotype" alt=""></a>
          <div class="nav">
            @if (selection?.Length > 0)
            {

                @foreach (var item in selection)
                {
                    <a class="@(item.IsAncestorOrSelf(Model) ? "nav-link active" : "nav-link")" href="@item.Url(PublishedUrlProvider)"><h5>@item.Name</h5></a>
                }
            }

          </div>
          <i class="fa-solid fa-magnifying-glass"></i>
        </div>
      </header>